<filter cluster-custom.**>
  @type record_transformer
  enable_ruby true  
  <record>
    tag ${tag}
    cluster_id ${component = tag.match(Regexp.compile('var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['cluster_id']}
    cluster_name ${component = tag.match(Regexp.compile('var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['cluster_name']}
    namespace ${component = tag.match(Regexp.compile('var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['namespace']}
    project_id ${component = tag.match(Regexp.compile('var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['project_id']}
    project_name ${component = tag.match(Regexp.compile('var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['project_name']}
    workload_name ${component = tag.match(Regexp.compile('var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['workload_name']}
    container_name ${component = tag.match(Regexp.compile('var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['container_name']}
    volume_name ${component = tag.match(Regexp.compile('var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['volume_name']}
    filename ${component = tag.match(Regexp.compile('var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['filename']}
  </record>
</filter>

<filter project-custom.**>
  @type record_transformer
  enable_ruby true  
  <record>
    tag ${tag}
    cluster_id ${component = tag.match(Regexp.compile('project-custom\.(?<project>[a-z0-9]+)\.var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['cluster_id']}
    cluster_name ${component = tag.match(Regexp.compile('project-custom\.(?<project>[a-z0-9]+)\.var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['cluster_name']}
    namespace ${component = tag.match(Regexp.compile('project-custom\.(?<project>[a-z0-9]+)\.var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['namespace']}
    project_id ${component = tag.match(Regexp.compile('project-custom\.(?<project>[a-z0-9]+)\.var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['project_id']}
    project_name ${component = tag.match(Regexp.compile('project-custom\.(?<project>[a-z0-9]+)\.var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['project_name']}
    workload_name ${component = tag.match(Regexp.compile('project-custom\.(?<project>[a-z0-9]+)\.var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['workload_name']}
    container_name ${component = tag.match(Regexp.compile('project-custom\.(?<project>[a-z0-9]+)\.var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['container_name']}
    volume_name ${component = tag.match(Regexp.compile('project-custom\.(?<project>[a-z0-9]+)\.var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['volume_name']}
    filename ${component = tag.match(Regexp.compile('project-custom\.(?<project>[a-z0-9]+)\.var\.log\.custom\.(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_]+)\.(?<filename>[a-z0-9]+).log$')); component['filename']}
  </record>
</filter>